#!/bin/bash

# üéôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å –ø–µ—Ä–µ—Å–∫–∞–∑–æ–º –¥–ª—è —Å–ª—É—Ö–∞

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -f .env ]; then
    set -a  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    source .env
    set +a
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω
    if [ ! -z "$DEEPSEEK_API_KEY" ]; then
        echo "‚úÖ API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ .env"
    fi
fi

echo "üéôÔ∏è –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ v2.0"
echo "========================================="
echo ""
echo "–≠—Ç–æ—Ç —Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–µ—Ç –∞—É–¥–∏–æ–∫–Ω–∏–≥—É —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–∞:"
echo "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç ‚Üí –∂–∏–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Å–∫–∞–∑"
echo "‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä"
echo "‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –∏ —Ç–∞–±–ª–∏—Ü"
echo "‚Ä¢ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -d "translations" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è translations –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo "   –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –∫–Ω–∏–≥–∏"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ (—É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ .env)
if [ -z "$DEEPSEEK_API_KEY" ]; then
    # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ —Ä–∞–∑ –Ω–∞–ø—Ä—è–º—É—é
    if [ -f .env ]; then
        export $(grep -v '^#' .env | xargs)
    fi
    
    # –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç –∫–ª—é—á–∞
    if [ -z "$DEEPSEEK_API_KEY" ]; then
        echo "‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo ""
        echo "–í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:"
        echo "1. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª: cp .env.example .env"
        echo "2. –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ .env: DEEPSEEK_API_KEY=–≤–∞—à_–∫–ª—é—á"
        echo ""
        read -p "–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á —Å–µ–π—á–∞—Å: " api_key
        if [ -z "$api_key" ]; then
            echo "‚ùå API –∫–ª—é—á –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞"
            exit 1
        fi
        export DEEPSEEK_API_KEY="$api_key"
    fi
fi

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
echo "üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏:"
echo ""
echo "1) üìñ –û–±—ã—á–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ (–ø—Ä—è–º–æ–µ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞)"
echo "2) üéØ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ (–ø–µ—Ä–µ—Å–∫–∞–∑ –¥–ª—è —Å–ª—É—Ö–∞)"
echo "3) üöÄ –ü–æ–ª–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è (–∫–æ–Ω—Ç–µ–∫—Å—Ç + –ø–µ—Ä–µ—Å–∫–∞–∑ + —Ñ–æ–Ω–µ—Ç–∏–∫–∞)"
echo ""
read -p "–í—ã–±–æ—Ä (1-3) [2]: " mode_choice

case $mode_choice in
    1)
        MODE="standard"
        echo "   –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: –û–±—ã—á–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞"
        ;;
    3)
        MODE="full"
        echo "   –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: –ü–æ–ª–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è"
        ;;
    *)
        MODE="adaptive"
        echo "   –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞"
        ;;
esac

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º - –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
if [ "$MODE" == "standard" ]; then
    echo ""
    echo "üéß –ó–∞–ø—É—Å–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏..."
    ./create_audiobook.sh
    exit $?
fi

# –®–ê–ì 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫–Ω–∏–≥–∏ (–¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
if [ "$MODE" == "full" ]; then
    echo ""
    echo "1Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫–Ω–∏–≥–∏..."
    echo "   –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–º–µ, –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ"
    
    python3 09_extract_book_context.py \
        --input-dir extracted_fixed \
        --output book_context.json
    
    if [ $? -ne 0 ]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ"
        CONTEXT_FLAG=""
    else
        CONTEXT_FLAG="--context book_context.json"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if [ -f "book_context.json" ]; then
            echo ""
            echo "üìñ –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–Ω–∏–≥–∏:"
            python3 -c "
import json
data = json.load(open('book_context.json'))
print(f\"  ‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å: {data.get('technical_level', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\")
print(f\"  ‚Ä¢ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {data.get('target_audience', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\")
if data.get('structure'):
    print(f\"  ‚Ä¢ –ì–ª–∞–≤: {data['structure'].get('total_chapters', 0)}\")
"
        fi
    fi
else
    CONTEXT_FLAG=""
fi

# –®–ê–ì 2: –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞—É–¥–∏–æ
echo ""
echo "2Ô∏è‚É£ –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –Ω–∞ —Å–ª—É—Ö..."
echo ""

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:"
echo ""
echo "–†–∞–∑–º–µ—Ä –≥—Ä—É–ø–ø—ã –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:"
echo "  3 - –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è (–º–µ–¥–ª–µ–Ω–Ω–µ–µ, —Ç–æ—á–Ω–µ–µ)"
echo "  5 - –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
echo "  7 - –ë—ã—Å—Ç—Ä–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è (–±—ã—Å—Ç—Ä–µ–µ, –º–µ–Ω–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ)"
echo ""
read -p "–í—ã–±–æ—Ä (3-7) [5]: " group_size
if [ -z "$group_size" ]; then
    GROUP_SIZE=5
else
    GROUP_SIZE=$group_size
fi

read -p "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ (1-10) [5]: " workers
if [ -z "$workers" ]; then
    WORKERS=5
else
    WORKERS=$workers
fi

# –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
ADAPT_SOURCE="translations"
if [ -d "translations_filtered" ] && [ "$(ls -A translations_filtered)" ]; then
    echo ""
    echo "üìã –ù–∞–π–¥–µ–Ω—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã"
    read -p "   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏? (y/n) [y]: " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        ADAPT_SOURCE="translations_filtered"
    fi
fi

echo ""
echo "üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:"
echo "   ‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫: $ADAPT_SOURCE"
echo "   ‚Ä¢ –ì—Ä—É–ø–ø–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤: $GROUP_SIZE"
echo "   ‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤: $WORKERS"
echo ""

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
read -p "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ–π –≥–ª–∞–≤–µ? (y/n) [n]: " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üß™ –¢–µ—Å—Ç–æ–≤–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤—ã..."
    python3 10_adapt_for_audio.py \
        --input-dir "$ADAPT_SOURCE" \
        --output-dir audio_adapted \
        --group-size "$GROUP_SIZE" \
        $CONTEXT_FLAG \
        --test
    
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –ø–æ–ª–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π? (y/n): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚èπÔ∏è –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
fi

# –ü–æ–ª–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è
echo ""
echo "üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞..."
echo "‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è"
echo ""

START_TIME=$(date +%s)

python3 10_adapt_for_audio.py \
    --input-dir "$ADAPT_SOURCE" \
    --output-dir audio_adapted \
    --group-size "$GROUP_SIZE" \
    --workers "$WORKERS" \
    $CONTEXT_FLAG

ADAPT_RESULT=$?

END_TIME=$(date +%s)
ADAPT_DURATION=$((END_TIME - START_TIME))
ADAPT_MIN=$((ADAPT_DURATION / 60))
ADAPT_SEC=$((ADAPT_DURATION % 60))

if [ $ADAPT_RESULT -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞"
    exit 1
fi

echo ""
echo "‚úÖ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${ADAPT_MIN} –º–∏–Ω ${ADAPT_SEC} —Å–µ–∫"
echo ""

# –®–ê–ì 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "3Ô∏è‚É£ –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏"
echo ""
read -p "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–æ–≤? (y/n) [y]: " -n 1 -r
echo ""

PHONETICS_FLAG=""
if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ—Ä–º–∏–Ω—ã –∏–∑ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    echo "   –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤..."
    python3 07_extract_terms.py \
        --input-dir audio_adapted \
        --output extracted_terms_audio.json
    
    if [ $? -eq 0 ] && [ -f "extracted_terms_audio.json" ]; then
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–æ–Ω–µ—Ç–∏–∫—É
        echo "   –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π..."
        python3 08_generate_phonetics.py \
            --terms extracted_terms_audio.json \
            --output phonetics_audio.json \
            --batch-size 20 \
            --workers 3
        
        if [ -f "phonetics_audio.json" ]; then
            PHONETICS_FLAG="--phonetics phonetics_audio.json"
            echo "   ‚úÖ –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã"
        fi
    fi
fi

# –®–ê–ì 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
echo ""
echo "4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –∏–∑ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞..."
echo ""

# –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞
echo "üé§ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –¥–ª—è –æ–∑–≤—É—á–∫–∏:"
echo "   1) –î–º–∏—Ç—Ä–∏–π (–º—É–∂—Å–∫–æ–π)"
echo "   2) –°–≤–µ—Ç–ª–∞–Ω–∞ (–∂–µ–Ω—Å–∫–∏–π)"
read -p "–í—ã–±–æ—Ä (1-2) [1]: " voice_choice

case $voice_choice in
    2)
        VOICE="female"
        echo "   –í—ã–±—Ä–∞–Ω–∞ –°–≤–µ—Ç–ª–∞–Ω–∞"
        ;;
    *)
        VOICE="male"
        echo "   –í—ã–±—Ä–∞–Ω –î–º–∏—Ç—Ä–∏–π"
        ;;
esac

# –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
echo ""
echo "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ (–¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è):"
echo "   1) –ú–µ–¥–ª–µ–Ω–Ω–∞—è (-10%)"
echo "   2) –ù–æ—Ä–º–∞–ª—å–Ω–∞—è (0%)"
echo "   3) –ß—É—Ç—å –±—ã—Å—Ç—Ä–µ–µ (+10%)"
read -p "–í—ã–±–æ—Ä (1-3) [2]: " speed_choice

case $speed_choice in
    1)
        RATE="-10%"
        ;;
    3)
        RATE="+10%"
        ;;
    *)
        RATE="+0%"
        ;;
esac

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –∞—É–¥–∏–æ
echo ""
read -p "üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –∞—É–¥–∏–æ (1-50) [25]: " audio_workers
if [ -z "$audio_workers" ]; then
    AUDIO_WORKERS=25
else
    AUDIO_WORKERS=$audio_workers
fi

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏..."
echo "================================"

START_TIME=$(date +%s)

# –ó–∞–ø—É—Å–∫ —Å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏
python3 05_create_audiobook.py \
    --translations-dir audio_adapted \
    --voice "$VOICE" \
    --rate "$RATE" \
    --workers "$AUDIO_WORKERS" \
    --paragraphs-per-group 3 \
    $PHONETICS_FLAG

AUDIO_RESULT=$?

END_TIME=$(date +%s)
AUDIO_DURATION=$((END_TIME - START_TIME))
AUDIO_MIN=$((AUDIO_DURATION / 60))
AUDIO_SEC=$((AUDIO_DURATION % 60))

echo ""
echo "‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ: ${AUDIO_MIN} –º–∏–Ω ${AUDIO_SEC} —Å–µ–∫"

if [ $AUDIO_RESULT -eq 0 ]; then
    echo ""
    echo "üéâ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!"
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "   ‚Ä¢ –†–µ–∂–∏–º: $MODE"
    echo "   ‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞: ${ADAPT_MIN} –º–∏–Ω"
    echo "   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ: ${AUDIO_MIN} –º–∏–Ω"
    
    TOTAL_MIN=$((ADAPT_MIN + AUDIO_MIN))
    echo "   ‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: ${TOTAL_MIN} –º–∏–Ω—É—Ç"
    echo ""
    echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
    echo "   ‚Ä¢ audio_adapted/ - –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç"
    echo "   ‚Ä¢ audiobook/audiobook_complete.mp3 - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞"
    
    if [ -f "book_context.json" ]; then
        echo "   ‚Ä¢ book_context.json - –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–Ω–∏–≥–∏"
    fi
    
    if [ -f "phonetics_audio.json" ]; then
        echo "   ‚Ä¢ phonetics_audio.json - —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏"
    fi
    
    # –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if [ -f "audiobook/audiobook_complete.mp3" ]; then
        FILE_SIZE=$(ls -lh "audiobook/audiobook_complete.mp3" | awk '{print $5}')
        echo ""
        echo "üìä –†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏: ${FILE_SIZE}"
    fi
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo ""
        read -p "üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–∞—á–∞–ª–æ? (y/n): " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            ffplay -autoexit -t 30 "audiobook/audiobook_complete.mp3" 2>/dev/null || \
            afplay -t 30 "audiobook/audiobook_complete.mp3" 2>/dev/null || \
            echo "   –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏"
        fi
    fi
    
    echo ""
    echo "üí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏:"
    echo "   ‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –æ–±—ä—è—Å–Ω–µ–Ω—ã –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º"
    echo "   ‚Ä¢ –£–¥–∞–ª–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–∑–¥–µ–ª—ã –∏ —Ä–∏—Å—É–Ω–∫–∏"
    echo "   ‚Ä¢ –°–ø–∏—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã –≤ —Å–≤—è–∑–Ω—ã–π —Ç–µ–∫—Å—Ç"
    echo "   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤—è–∑—É—é—â–∏–µ —Ñ—Ä–∞–∑—ã –º–µ–∂–¥—É –∏–¥–µ—è–º–∏"
    echo "   ‚Ä¢ –°—Ç–∏–ª—å: —ç–∫—Å–ø–µ—Ä—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç –∫–æ–ª–ª–µ–≥–µ"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏"
    exit 1
fi