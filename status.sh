#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
echo "===================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "book.pdf" ]; then
    echo "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "  ./new_project.sh     - –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
    echo "  ./load_project.sh    - –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 0
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
echo "üìñ –ö–Ω–∏–≥–∞:"
python3 -c "
import fitz
from pathlib import Path

doc = fitz.open('book.pdf')
pages = len(doc)
metadata = doc.metadata

if metadata and metadata.get('title'):
    print(f'  {metadata[\"title\"]}')
else:
    print('  book.pdf')

print(f'  –°—Ç—Ä–∞–Ω–∏—Ü: {pages}')

size_mb = Path('book.pdf').stat().st_size / (1024 * 1024)
print(f'  –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB')

doc.close()
" 2>/dev/null

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –≥–ª–∞–≤—ã
if [ -d "extracted_fixed" ]; then
    EXTRACTED_DIR="extracted_fixed"
elif [ -d "extracted" ]; then
    EXTRACTED_DIR="extracted"
else
    EXTRACTED_DIR=""
fi

if [ -n "$EXTRACTED_DIR" ]; then
    CHAPTER_COUNT=$(ls "$EXTRACTED_DIR"/chapter_*.json 2>/dev/null | wc -l)
    echo "üìÑ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ:"
    echo "  –ì–ª–∞–≤ –∏–∑–≤–ª–µ—á–µ–Ω–æ: $CHAPTER_COUNT"
    
    if [ -f "$EXTRACTED_DIR/metadata.json" ]; then
        PAGES=$(python3 -c "
import json
with open('$EXTRACTED_DIR/metadata.json', 'r') as f:
    data = json.load(f)
    print(data.get('total_pages', 0))
" 2>/dev/null)
        echo "  –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $PAGES"
    fi
else
    echo "üìÑ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ: –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
    echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 01_extract_book.py"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—ã
if [ -d "figures" ] && [ "$(ls -A figures/*.png 2>/dev/null)" ]; then
    FIGURE_COUNT=$(ls figures/*.png 2>/dev/null | wc -l)
    echo "üñºÔ∏è  –î–∏–∞–≥—Ä–∞–º–º—ã:"
    echo "  –ò–∑–≤–ª–µ—á–µ–Ω–æ: $FIGURE_COUNT"
else
    echo "üñºÔ∏è  –î–∏–∞–≥—Ä–∞–º–º—ã: –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã"
    echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 02_extract_figures.py"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
if [ -d "translations" ]; then
    TRANS_COUNT=$(ls translations/chapter_*_translated.json 2>/dev/null | wc -l)
    
    if [ "$TRANS_COUNT" -gt 0 ]; then
        echo "üåê –ü–µ—Ä–µ–≤–æ–¥:"
        echo "  –ì–ª–∞–≤ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: $TRANS_COUNT –∏–∑ $CHAPTER_COUNT"
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç
        if [ "$CHAPTER_COUNT" -gt 0 ]; then
            PERCENT=$((TRANS_COUNT * 100 / CHAPTER_COUNT))
            echo -n "  –ü—Ä–æ–≥—Ä–µ—Å—Å: "
            
            # –†–∏—Å—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            BAR_LENGTH=20
            FILLED=$((PERCENT * BAR_LENGTH / 100))
            
            echo -n "["
            for ((i=0; i<$FILLED; i++)); do echo -n "‚ñà"; done
            for ((i=$FILLED; i<$BAR_LENGTH; i++)); do echo -n "‚ñë"; done
            echo "] $PERCENT%"
        fi
    else
        echo "üåê –ü–µ—Ä–µ–≤–æ–¥: –Ω–µ –Ω–∞—á–∞—Ç"
        echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 03_translate_parallel.py --all"
    fi
else
    echo "üåê –ü–µ—Ä–µ–≤–æ–¥: –Ω–µ –Ω–∞—á–∞—Ç"
    echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 03_translate_parallel.py --all"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã
if [ -d "output" ] && [ "$(ls -A output/*.pdf 2>/dev/null)" ]; then
    echo "üìö –í—ã—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    for file in output/*.pdf; do
        SIZE_MB=$(du -m "$file" | cut -f1)
        echo "  ‚Ä¢ $(basename "$file") (${SIZE_MB} MB)"
    done
else
    echo "üìö –ö–æ–º–ø–∏–ª—è—Ü–∏—è: –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
    echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 04_compile_book.py"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
CURRENT_PROJECT=$(python3 -c "
from pathlib import Path
current_file = Path('projects_archive/.current')
if current_file.exists():
    with open(current_file, 'r') as f:
        print(f.read().strip())
" 2>/dev/null)

if [ -n "$CURRENT_PROJECT" ]; then
    echo "üíæ –ü—Ä–æ–µ–∫—Ç: $CURRENT_PROJECT"
else
    echo "üíæ –ü—Ä–æ–µ–∫—Ç: –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    echo "  –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ./save_project.sh"
fi

echo ""

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
echo "üìã –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:"

if [ "$CHAPTER_COUNT" = "0" ]; then
    echo "  1. –ò–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç: python3 01_extract_book.py"
elif [ "$TRANS_COUNT" = "0" ]; then
    echo "  1. –ò–∑–≤–ª–µ—á—å –¥–∏–∞–≥—Ä–∞–º–º—ã: python3 02_extract_figures.py"
    echo "  2. –ù–∞—á–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥: python3 03_translate_parallel.py --all"
elif [ "$TRANS_COUNT" -lt "$CHAPTER_COUNT" ]; then
    echo "  1. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥: python3 03_translate_parallel.py"
    echo "  2. –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ: python3 04_compile_book.py"
else
    echo "  1. –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É: python3 04_compile_book.py"
    echo "  2. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç: ./save_project.sh"
fi