#!/bin/bash

# üéß –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏

echo "üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ v1.0"
echo "============================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
if [ ! -d "translations" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏!"
    echo "   –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –∫–Ω–∏–≥–∏"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
if [ -d "translations_filtered" ] && [ "$(ls -A translations_filtered)" ]; then
    echo "üìã –ù–∞–π–¥–µ–Ω—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã"
    read -p "   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö? (y/n) [y]: " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        TRANSLATIONS_DIR="translations_filtered"
    else
        TRANSLATIONS_DIR="translations"
    fi
else
    TRANSLATIONS_DIR="translations"
fi

echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑: ${TRANSLATIONS_DIR}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –º–æ–¥—É–ª–∏
if ! python3 -c "import edge_tts" 2>/dev/null; then
    echo "‚ö†Ô∏è edge-tts –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    read -p "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? (y/n): " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        pip install edge-tts pydub
    else
        echo "‚ùå –û—Ç–º–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install edge-tts pydub"
        exit 1
    fi
else
    echo "‚úÖ edge-tts —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º ffmpeg
if ! command -v ffmpeg &> /dev/null; then
    echo "‚ö†Ô∏è ffmpeg –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–∫–∞:"
    echo "   ‚Ä¢ macOS: brew install ffmpeg"
    echo "   ‚Ä¢ Ubuntu/Debian: apt install ffmpeg"
    echo "   ‚Ä¢ CentOS/RHEL: yum install ffmpeg"
    read -p "   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ ffmpeg? (y/n): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
else
    echo "‚úÖ ffmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞
echo ""
echo "üé§ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –¥–ª—è –æ–∑–≤—É—á–∫–∏:"
echo "   1) –î–º–∏—Ç—Ä–∏–π (–º—É–∂—Å–∫–æ–π)"
echo "   2) –°–≤–µ—Ç–ª–∞–Ω–∞ (–∂–µ–Ω—Å–∫–∏–π)"
read -p "–í—ã–±–æ—Ä (1-2) [1]: " voice_choice

case $voice_choice in
    2)
        VOICE="female"
        echo "   –í—ã–±—Ä–∞–Ω–∞ –°–≤–µ—Ç–ª–∞–Ω–∞"
        ;;
    *)
        VOICE="male"
        echo "   –í—ã–±—Ä–∞–Ω –î–º–∏—Ç—Ä–∏–π"
        ;;
esac

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
echo ""
echo "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏:"
echo "   1) –ú–µ–¥–ª–µ–Ω–Ω–∞—è (-25%)"
echo "   2) –ù–æ—Ä–º–∞–ª—å–Ω–∞—è (0%)"
echo "   3) –ë—ã—Å—Ç—Ä–∞—è (+25%)"
read -p "–í—ã–±–æ—Ä (1-3) [2]: " speed_choice

case $speed_choice in
    1)
        RATE="-25%"
        echo "   –í—ã–±—Ä–∞–Ω–∞ –º–µ–¥–ª–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å"
        ;;
    3)
        RATE="+25%"
        echo "   –í—ã–±—Ä–∞–Ω–∞ –±—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å"
        ;;
    *)
        RATE="+0%"
        echo "   –í—ã–±—Ä–∞–Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å"
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–∏–º–∏—Ç—ã
echo ""
current_limit=$(ulimit -n)
echo "üìä –¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤: $current_limit"

if [ "$current_limit" -lt 1024 ]; then
    echo "‚ö†Ô∏è –ù–∏–∑–∫–∏–π –ª–∏–º–∏—Ç —Ñ–∞–π–ª–æ–≤! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 10 –ø–æ—Ç–æ–∫–æ–≤"
    DEFAULT_WORKERS=10
elif [ "$current_limit" -lt 2048 ]; then
    echo "‚ö†Ô∏è –°—Ä–µ–¥–Ω–∏–π –ª–∏–º–∏—Ç —Ñ–∞–π–ª–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 15 –ø–æ—Ç–æ–∫–æ–≤"
    DEFAULT_WORKERS=15
else
    echo "‚úÖ –õ–∏–º–∏—Ç —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –¥–ª—è 25 –ø–æ—Ç–æ–∫–æ–≤"
    DEFAULT_WORKERS=25
fi

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤
echo ""
read -p "üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ (1-50) [$DEFAULT_WORKERS]: " workers
if [ -z "$workers" ]; then
    WORKERS=$DEFAULT_WORKERS
else
    WORKERS=$workers
fi
echo "   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è $WORKERS –ø–æ—Ç–æ–∫–æ–≤"

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–æ–≤
if [ "$WORKERS" -gt 15 ] && [ "$current_limit" -lt 2048 ]; then
    echo ""
    echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ú–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–æ–≤ –ø—Ä–∏ –Ω–∏–∑–∫–æ–º –ª–∏–º–∏—Ç–µ —Ñ–∞–π–ª–æ–≤!"
    echo "   –í–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ 'Too many open files'"
    echo "   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å ./fix_limits.sh"
    read -p "   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞
echo ""
echo "üî§ –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞ —Ç–µ—Ä–º–∏–Ω–æ–≤:"
echo "   –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã (CMMI, Process Area –∏ —Ç.–¥.)"
echo "   –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é"
echo "   –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è"
read -p "   –í–∫–ª—é—á–∏—Ç—å? (y/n) [y]: " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Nn]$ ]]; then
    PHONETIC_FLAG="--disable-phonetic"
    echo "   –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
else
    PHONETIC_FLAG=""
    echo "   –§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞"
fi

# –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏..."
echo "================================"

START_TIME=$(date +%s)

python3 05_create_audiobook.py \
    --translations-dir "${TRANSLATIONS_DIR}" \
    --voice "${VOICE}" \
    --rate "${RATE}" \
    --workers "${WORKERS}" \
    ${PHONETIC_FLAG}

RESULT=$?

END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))
DURATION_MIN=$((DURATION / 60))
DURATION_SEC=$((DURATION % 60))

echo ""
echo "‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${DURATION_MIN} –º–∏–Ω ${DURATION_SEC} —Å–µ–∫"

if [ $RESULT -eq 0 ]; then
    echo ""
    echo "üéâ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!"
    echo "üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤:"
    echo "   ‚Ä¢ audiobook/audiobook_complete.mp3 - –ø–æ–ª–Ω–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞"
    echo "   ‚Ä¢ audiobook/temp_audio/ - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –≥–ª–∞–≤—ã"
    echo "   ‚Ä¢ audiobook/audiobook_metadata.json - –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if [ -f "audiobook/audiobook_complete.mp3" ]; then
        FILE_SIZE=$(ls -lh "audiobook/audiobook_complete.mp3" | awk '{print $5}')
        echo ""
        echo "üìä –†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏: ${FILE_SIZE}"
    fi
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo ""
        read -p "üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–∞—á–∞–ª–æ? (y/n): " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 30 —Å–µ–∫—É–Ω–¥
            ffplay -autoexit -t 30 "audiobook/audiobook_complete.mp3" 2>/dev/null || \
            afplay -t 30 "audiobook/audiobook_complete.mp3" 2>/dev/null || \
            echo "   –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏"
        fi
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏"
    exit 1
fi